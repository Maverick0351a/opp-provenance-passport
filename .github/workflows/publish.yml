name: publish-opp-py

on:
  push:
    tags:
      - 'opp-py-v*'
  release:
    types: [published]

jobs:
  build-and-publish:
    if: startsWith(github.ref, 'refs/tags/opp-py-v') || github.event_name == 'release'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write  # (future use for trusted publishing)
    steps:
      - uses: actions/checkout@v5
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Derive version from tag
        id: ver
        run: |
          ref="${GITHUB_REF##*/}"  # e.g. opp-py-v0.1.1
          ver=${ref#opp-py-v}
          echo "version=$ver" >> $GITHUB_OUTPUT
      - name: Show project version vs tag
        run: |
          echo "Tag version: ${{ steps.ver.outputs.version }}"
          grep '^version = ' packages/opp_py/pyproject.toml || true
      - name: Fail if pyproject version mismatch
        run: |
          file_ver=$(grep '^version = ' packages/opp_py/pyproject.toml | sed -E "s/version = \"(.*)\"/\1/")
          if [ "$file_ver" != "${{ steps.ver.outputs.version }}" ]; then
            echo "Version mismatch: tag=${{ steps.ver.outputs.version }} pyproject=$file_ver" >&2
            exit 1
          fi
      - name: Install build backend
        run: |
          python -m pip install --upgrade pip
          pip install build twine
      - name: Build dist
        working-directory: packages/opp_py
        run: python -m build
      - name: Twine check
        working-directory: packages/opp_py
        run: python -m twine check dist/*
      - name: Publish to PyPI
        if: success()
        working-directory: packages/opp_py
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: python -m twine upload dist/*
      - name: Summary
        run: echo "Published opp-py ${{ steps.ver.outputs.version }}" >> $GITHUB_STEP_SUMMARY
